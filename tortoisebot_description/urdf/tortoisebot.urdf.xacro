<?xml version="1.0"?>
<robot name="tortoisebot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Include materials -->
  <xacro:include filename="$(find tortoisebot_description)/urdf/materials.xacro"/>

  <!-- Properties -->
  <xacro:property name="base_width" value="0.31"/>
  <xacro:property name="base_length" value="0.42"/>
  <xacro:property name="base_height" value="0.18"/>
  <xacro:property name="wheel_radius" value="0.10"/>
  <xacro:property name="wheel_width" value="0.04"/>
  <xacro:property name="wheel_ygap" value="0.025"/>
  <xacro:property name="wheel_zoff" value="0.05"/>
  <xacro:property name="wheel_xoff" value="0.12"/>
  <xacro:property name="caster_xoff" value="0.14"/>

  <!-- Base Link -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="10"/>
      <inertia ixx="0.583" ixy="0.0" ixz="0.0" iyy="0.533" iyz="0.0" izz="0.533"/>
    </inertial>
  </link>

  <!-- Base Footprint -->
  <link name="base_footprint"/>
  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0.0 0.0 ${wheel_radius + wheel_zoff}" rpy="0 0 0"/>
  </joint>

  <!-- Wheels Macro -->
  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="2.5"/>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <inertia ixx="0.0125" ixy="0.0" ixz="0.0" iyy="0.0125" iyz="0.0" izz="0.0125"/>
      </inertial>
    </link>
    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect * wheel_xoff} ${y_reflect * (base_width/2 + wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
      <dynamics damping="0.1" friction="0.1"/>
    </joint>
  </xacro:macro>

  <xacro:wheel prefix="drivewhl_l" x_reflect="-1" y_reflect="1"/>
  <xacro:wheel prefix="drivewhl_r" x_reflect="-1" y_reflect="-1"/>

  <!-- Caster Wheel -->
  <link name="front_caster">
    <visual>
      <geometry>
        <sphere radius="${wheel_radius + wheel_zoff - (base_height / 2)}"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="${wheel_radius + wheel_zoff - (base_height / 2)}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
    </inertial>
  </link>
  <joint name="caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_caster"/>
    <origin xyz="${caster_xoff} 0.0 ${-(base_height / 2)}" rpy="0 0 0"/>
  </joint>

  <!-- IMU -->
  <link name="imu_link">
    <visual>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0 0 0.01" rpy="0 0 0"/>
  </joint>
  
  <!-- Front Bumper -->
  <link name="front_bumper_link">
    <visual>
      <geometry>
        <box size="0.02 ${base_width + 0.05} 0.08"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision name="front_bumper_collision">
      <geometry>
        <box size="0.02 ${base_width + 0.05} 0.08"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  
  <joint name="front_bumper_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_bumper_link"/>
    <origin xyz="${base_length/2 + 0.01} 0 0" rpy="0 0 0"/>
  </joint>

  <!-- Left Bumper -->
  <link name="left_bumper_link">
    <visual>
      <geometry>
        <box size="0.15 0.02 0.08"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision name="left_bumper_collision">
      <geometry>
        <box size="0.15 0.02 0.08"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  
  <joint name="left_bumper_joint" type="fixed">
    <parent link="base_link"/>
    <child link="left_bumper_link"/>
    <origin xyz="0.05 ${base_width/2 + 0.01} 0" rpy="0 0 0"/>
  </joint>

  <!-- Right Bumper -->
  <link name="right_bumper_link">
    <visual>
      <geometry>
        <box size="0.15 0.02 0.08"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision name="right_bumper_collision">
      <geometry>
        <box size="0.15 0.02 0.08"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  
  <joint name="right_bumper_joint" type="fixed">
    <parent link="base_link"/>
    <child link="right_bumper_link"/>
    <origin xyz="0.05 ${-(base_width/2 + 0.01)} 0" rpy="0 0 0"/>
  </joint>
  
  <!-- Lidar -->
  <link name="lidar_link">
    <visual>
      <geometry>
        <cylinder radius="0.05" length="0.04"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.05" length="0.04"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0 0 ${base_height / 2 + 0.02}" rpy="0 0 0"/>
  </joint>

  <!-- ==================== Gazebo Plugins for Harmonic ==================== -->

  <!-- Gazebo Materials -->
  <gazebo reference="base_link">
    <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo reference="drivewhl_l_link">
    <material>Gazebo/Black</material>
    <mu1>1.5</mu1>
    <mu2>1.5</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <fdir1>1 0 0</fdir1>
  </gazebo>

  <gazebo reference="drivewhl_r_link">
    <material>Gazebo/Black</material>
    <mu1>1.5</mu1>
    <mu2>1.5</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <fdir1>1 0 0</fdir1>
  </gazebo>

  <gazebo reference="front_caster">
    <material>Gazebo/Black</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>

  <gazebo reference="front_bumper_link">
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo reference="left_bumper_link">
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo reference="right_bumper_link">
    <material>Gazebo/Red</material>
  </gazebo>

  <!-- System Plugins -->
  <gazebo>
    <plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
      <left_joint>drivewhl_l_joint</left_joint>
      <right_joint>drivewhl_r_joint</right_joint>
      <wheel_separation>0.36</wheel_separation>
      <wheel_radius>0.10</wheel_radius>
      <topic>cmd_vel</topic>
      <odom_topic>odom</odom_topic>
      <frame_id>odom</frame_id>
      <child_frame_id>base_link</child_frame_id>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <max_linear_velocity>2.0</max_linear_velocity>
      <max_angular_velocity>2.0</max_angular_velocity>
      <odom_publish_frequency>50</odom_publish_frequency>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin filename="gz-sim-joint-state-publisher-system" name="gz::sim::systems::JointStatePublisher">
      <joint_name>drivewhl_l_joint</joint_name>
      <joint_name>drivewhl_r_joint</joint_name>
      <topic>/joint_states</topic>
      <update_rate>50</update_rate>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin filename="gz-sim-pose-publisher-system" name="gz::sim::systems::PosePublisher">
      <publish_link_pose>true</publish_link_pose>
      <use_pose_vector_msg>true</use_pose_vector_msg>
      <static_publisher>true</static_publisher>
      <static_update_frequency>1</static_update_frequency>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin filename="gz-sim-sensors-system" name="gz::sim::systems::Sensors">
      <render_engine>ogre2</render_engine>
    </plugin>
  </gazebo>

  <!-- IMU Sensor -->
  <gazebo reference="imu_link">
    <sensor name="tortoisebot_imu_sensor" type="imu">
      <always_on>1</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>imu</topic>
      <plugin filename="gz-sim-imu-system" name="gz::sim::systems::Imu">
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Contact Sensors -->
  <gazebo reference="front_bumper_link">
    <sensor name="front_bumper_contact" type="contact">
      <contact>
        <collision>front_bumper_collision</collision>
      </contact>
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <plugin filename="gz-sim-contact-system" name="gz::sim::systems::Contact">
        <topic>bumper/front_contact</topic>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="left_bumper_link">
    <sensor name="left_bumper_contact" type="contact">
      <contact>
        <collision>left_bumper_collision</collision>
      </contact>
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <plugin filename="gz-sim-contact-system" name="gz::sim::systems::Contact">
        <topic>bumper/left_contact</topic>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="right_bumper_link">
    <sensor name="right_bumper_contact" type="contact">
      <contact>
        <collision>right_bumper_collision</collision>
      </contact>
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <plugin filename="gz-sim-contact-system" name="gz::sim::systems::Contact">
        <topic>bumper/right_contact</topic>
      </plugin>
    </sensor>
  </gazebo>
  
  <!-- Lidar Sensor -->
  <gazebo reference="lidar_link">
    <sensor name="tortoisebot_lidar" type="gpu_lidar">
      <pose>0 0 0 0 0 0</pose>
      <topic>scan</topic>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>12.0</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <always_on>1</always_on>
      <visualize>false</visualize>
    </sensor>
  </gazebo>

</robot>